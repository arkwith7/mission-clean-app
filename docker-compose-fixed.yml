services:
  # 백엔드 API 서버
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: mission-clean-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
    volumes:
      - ./server/mission_clean.sqlite:/app/mission_clean.sqlite
    networks:
      - mission-clean-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 프론트엔드 서버
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: mission-clean-frontend
    restart: unless-stopped
    networks:
      - mission-clean-network

  # Nginx 리버스 프록시 (HTTPS 터미네이션)
  nginx:
    image: nginx:alpine
    container_name: mission-clean-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_started
    networks:
      - mission-clean-network

networks:
  mission-clean-network:
    driver: bridge 